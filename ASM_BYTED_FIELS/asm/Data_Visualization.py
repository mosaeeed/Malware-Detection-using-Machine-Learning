# Importing libraries
import time
import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt
import seaborn as sns


# Loading data
malwarelist=np.genfromtxt('nn_500_data_to_traFull.csv',delimiter=",",dtype=str)

X = malwarelist[:,0:116]

y = malwarelist[:,-1]


# Assigning names to their fields
feat_cols = [ 'pixel'+str(i) for i in range(X.shape[1]) ]

df = pd.DataFrame(X,columns=feat_cols)

df['y'] = y

df['label'] = df['y'].apply(lambda i: str(i))

X, y = None, None
print('Size of the dataframe: {}'.format(df.shape))


# Implementing PCA
pca = PCA(n_components=3)
pca_result = pca.fit_transform(df[feat_cols].values)
df['pca-one'] = pca_result[:,0]
df['pca-two'] = pca_result[:,1] 
df['pca-three'] = pca_result[:,2]
print('Explained variation per principal component: {}'.format(pca.explained_variance_ratio_))


# Plotting graph using two PCA components
plt.figure(figsize=(16,10))
sns.scatterplot(
    x="pca-one", y="pca-two",
    hue="y",
    palette=sns.color_palette("hls", 9),
    data=df,
    legend="full",
    alpha=0.3
)

# Copying data
df_copy = df.copy()
data_set = df_copy[feat_cols].values
pca = PCA(n_components=3)
pca_result = pca.fit_transform(data_set)
df_copy['pca-one'] = pca_result[:,0]
df_copy['pca-two'] = pca_result[:,1] 
df_copy['pca-three'] = pca_result[:,2]
print('Explained variation per principal component: {}'.format(pca.explained_variance_ratio_))


# Applying t-SNE fro data visualization
time_start = time.time()
tsne = TSNE(n_components=2, verbose=1, perplexity=40, n_iter=300)
tsne_results = tsne.fit_transform(data_set)
print('t-SNE done! Time elapsed: {} seconds'.format(time.time()-time_start))


# Plotting t-SNE graph using two component
df_copy['tsne-2d-one'] = tsne_results[:,0]
df_copy['tsne-2d-two'] = tsne_results[:,1]
plt.figure(figsize=(16,10))
sns.scatterplot(
    x="tsne-2d-one", y="tsne-2d-two",
    hue="y",
    palette=sns.color_palette("hls", 9),
    data=df_copy,
    legend="full",
    alpha=0.3
)

