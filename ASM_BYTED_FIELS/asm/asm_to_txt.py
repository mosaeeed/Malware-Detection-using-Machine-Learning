# Importing libraries
from pyparsing import oneOf,Word,hexnums,Optional,WordEnd,alphas,alphanums
import numpy as np




# initilizing variables
c_files=['58kxhXouHzFd4g3rmInB','6tfw0xSL2FNHOCJBdlaA','a9oIzfw03ED4lTBCt52Y','cf4nzsoCmudt1kwleOTI','d0iHC6ANYGon7myPFzBe','da3XhOZzQEbKVtLgMYWv','fRLS3aKkijp4GH0Ds6Pv','IidxQvXrlBkWPZAfcqKT']

data_path='D:/BFCAI/Proj/X/Dynamic_Detection/datasets/asm/'
to_save="D:/BFCAI/Proj/X/Dynamic_Detection/datasets/asm_to_txt/"

section_list=[]
opcode_list=[]
files_not_parsed=[]

# Reading ID's and labels from csv
malwarelist=np.genfromtxt('D:/BFCAI/Proj/X/Dynamic_Detection/asm/trainLabels.csv',delimiter=",",dtype=str)
malwarelist=malwarelist[1:]

# Making an ASM file line parser
hex_integer = Word(hexnums) + WordEnd()
line = hex_integer + Optional((hex_integer*(1,))("instructions") + Word(alphas,alphanums)("opcode"))

# This is the main part of the code, as it takes several days to process all files so it is designed in such a way that you can run and stop this section again and again without losing any data.
for name in malwarelist:
    b = ".bytes"
    nam=name[0].strip('"')
    

# =========Run following commands only if you are not runing this code for the first time =========
    c_files=np.load('c_files.npy')
    files_not_parsed=np.load('files_not_parsed.npy')
    c_files=c_files.tolist()
    files_not_parsed=files_not_parsed.tolist()
    section_list=np.load('sect_list.npy')
    opcode_list=np.load('opc_list.npy')
    section_list=section_list.tolist()
    opcode_list=opcode_list.tolist()
# =================================================================================================

    
    if nam not in c_files:
        if nam not in files_not_parsed:
            nam=str(nam)
            nam_asm=data_path+nam+".asm"
            nam_txt=to_save+nam+".txt"
            asm_list=[]
            try:
                with open(nam_asm,encoding='ISO-8859-1') as f:
                    lines=f.readlines()
                    for source_line in lines:
                        if source_line=="\n":
                            continue        
                        section=source_line[:source_line.find(':')+1]
                        if section not in section_list:
                            section_list.append(str(section))   
                        result = line.parseString(source_line[source_line.find(':')+1:])
                        if "opcode" in result:
                            opcod=result.opcode
                            x=section+' '+opcod
                            asm_list.append(x)
                            if opcod not in opcode_list:
                                opcode_list.append(str(result.opcode))
                with open(nam_txt, "a") as file_prime:
                    for i in asm_list:
                        file_prime.write(str(i)+ '\n')
                        
                c_files.append(nam) 
            except:
                files_not_parsed.append(nam)
                
    np.save('c_files.npy',c_files)
    np.save('files_not_parsed.npy',files_not_parsed)
    np.save('sect_list.npy', section_list)
    np.save('opc_list.npy', opcode_list)
